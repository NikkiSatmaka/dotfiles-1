# a lot of stuff from here: https://gist.github.com/napcs/1147532
# rest from gotbletu's config (https://github.com/gotbletu/dotfiles)
# http://zanshin.net/2013/09/05/my-tmux-configuration/
# http://www.unwiredcouch.com/2013/11/15/my-tmux-setup.html
# https://wiki.archlinux.org/index.php/tmux
# http://mutelight.org/practical-tmux
# useful binding info: http://superuser.com/questions/352117/binding-a-tmux-key-to-multiple-commands

# TODO update word separators (minor)

# * General Settings
# change prefix key
unbind C-b
# caps + f (qwerty e)
set -g prefix `
set -g prefix2 C-f

# set window and pane index to 1 (0 by default)
set -g base-index 1
set -g pane-base-index 1

# default shell
set -g default-command zsh

# increase scrollback
set -g history-limit 100000

# http://www.youtube.com/watch?v=xUB-quCdun0
# keep for killing to line end
# bind -n C-k clear-history

# fix mode switching delay in vim; https://superuser.com/questions/252214/slight-delay-when-switching-modes-in-vim-using-tmux-or-screen/252717#252717
set -sg escape-time 0

set -g focus-events on
set -wg aggressive-resize on

# * Appearance
# 256 colour
set -g default-terminal "screen-256color"

# ** Statusbar Customization
# UTF-8 character support in the status bar
# set -g status-utf8 on

# refresh the status bar faster
set -g status-interval 1

# highlight windows with activity
set -wg monitor-activity on
# but don't show message about it (default)
# set -g visual-activity off

# lower time messages stay in status bar
set -g display-time 2000

# simple theme that uses terminal colors
set -g @plugin 'arcticicestudio/nord-tmux'
# no powerline symbols; just rectangles
set -g @nord_tmux_no_patched_font "1"

# * Window/Pane Settings
# send keystrokes to other panes
bind C-s set -w synchronize-panes

# renumber windows sequentially after closing any of them
# https://github.com/thoughtbot/dotfiles/blob/master/tmux.conf
set -g renumber-windows on

# renumber windows manually
# https://github.com/jasoncodes/dotfiles/blob/master/config/tmux.conf
# bind R set renumber-windows on\; new-window\; kill-window\; set renumber-windows off\; display 'Renumbered'

# set name of windows based on command
set -wg automatic-rename on

# no confirmation when killing window/pane; by default is set to ask
# http://unix.stackexchange.com/a/30283
bind x kill-pane

# * Keybindings
# ** Useful Defaults
# ? to see keybindings
# C to view/change settings (3.2)

# $ to rename session
# d detach from session

# l switch to last window
# L switch to last session

# c create window
# x close window

# ! break pane out into new window

# s - choose-tree -Zs
# switch (RET), close (x), close tagged (X) etc. sessions with preview
# t to toggle tag

# w - choose-tree -Zw
# same as above for windows

# ** Basic
# key to reload .tmux.conf
bind . source-file ~/.config/tmux/tmux.conf \
     \; display-message "Configuration reloaded" \; refresh-client

# send prefix key to tmux session within another tmux session or app
bind a send-prefix

bind \; command-prompt

unbind t
bind t switch-client -T tprefix

# full list-keys
bind -T tprefix ? list-keys
bind -T tprefix ';' list-commands

# create new named session
bind _ command-prompt "new -s %1"

# select panes; colemak
# (i shows info already in status bar)
bind h select-pane -L
bind i select-pane -R
# can use up and down for up and down (don't really use vertical splits)

# cycle panes (no prefix)
# bind -n M-h select-pane -t :.-	# previous/counterclockwise
# bind -n M-i select-pane -t :.+	# next pane/clockwise

# select prev/next window (use very few windows now, so this is usually enough)
bind -r n select-window -t :-
bind -r e select-window -t :+

# swap windows
bind -T tprefix n swap-window -d -t :-
bind -T tprefix e swap-window -d -t :+

# switch to last window (also l)
bind -n M-Tab last-window

# resize panes (don't really use)
# M-<direction> for 5, C-<direction> for 1

# better pane split bindings
bind "'" split-window -h
bind - split-window -v

# toggle maximize pane; now builtin
bind k resize-pane -Z

# ** Copy Mode
# vim keys in copy or choice mode
set -wg mode-keys vi

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind Escape copy-mode
bind v copy-mode
bind -T copy-mode-vi Escape send -X cancel
bind p paste-buffer
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi r send -X rectangle-toggle
bind -T copy-mode-vi Home send -X start-of-line
bind -T copy-mode-vi End send -X end-of-line
# on kitty, copy to clipboard just works now, but it appends?
# enter by default
# bind -T copy-mode-vi y send -X vi-copy
if "which pbcopy" \
   {bind -T copy-mode-vi y "send -X copy-pipe 'pbcopy' \; send -X cancel"}

if "which xsel" \
   {bind -T copy-mode-vi y "send -X copy-pipe 'xsel -ib' \; send -X cancel"}

# https://github.com/bunnyfly/dotfiles/blob/master/tmux.conf
# Colemak Keys
bind -T copy-mode-vi n send -X cursor-down
bind -T copy-mode-vi e send -X cursor-up
bind -T copy-mode-vi i send -X cursor-right
bind -T copy-mode-vi k send -X search-again
bind -T copy-mode-vi K send -X search-reverse
bind -T copy-mode-vi j send -X next-word-end
bind -T copy-mode-vi J send -X next-space-end

# pretty much always searching backwards
bind -T copy-mode-vi / command-prompt -p "(search up)" \
     "send -X search-backward \"%%%\""
bind -T copy-mode-vi ? command-prompt -p "(search down)" \
     "send -X search-forward \"%%%\""

# jump between shell prompts (only works with my zsh prompt setup)
bind -T copy-mode-vi E \; \
     send -X start-of-line \; \
     send -X search-backward "(»|)"
bind -T copy-mode-vi N \; \
     send -X start-of-line \; \
     send -X search-forward "(»|)"

# TODO add back choice and edit bindings if it ever becomes possible (their
# tables were removed in 2.4)

# ** External Scripts
# cmatrix screensaver
# demo video: http://www.youtube.com/watch?v=s0T82aJn1DQ
# set -g lock-after-time 120
# set -g lock-command "/usr/bin/cmatrix -C blue"

# open pane history in editor
bind / capture-pane -S -10000 \; save-buffer /tmp/tmux-buffer \; \
     new-window "$EDITOR /tmp/tmux-buffer"

# url hinting using link-hint.el
# https://github.com/noctuid/link-hint.el#using-for-links-in-terminal-with-tmux
bind f capture-pane \; save-buffer /tmp/tmux-buffer \; new-window \
     { emacsclient -t -e '(noct-terminal-link-hint-file "/tmp/tmux-buffer")' }

# * Plugins
# prefix I to install; prefix U to update
set -g @plugin 'tmux-plugins/tpm'
# complete with fzf from scrollback
set -g @plugin 'laktak/extrakto'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# TODO https://github.com/tmux-plugins/tmux-yank/issues/140
# https://github.com/tmux-plugins/tmux-yank/pull/142
# even fork is broken for some other reason
# set -g @plugin 'jonasw234/tmux-yank'

# would be nice to set letters exactly, but this is good enough
set -g @thumbs-alphabet colemak-homerow
# use the same key for duplicates
set -g @thumbs-unique true
set -g @thumbs-command 'echo -n "{}" | xsel -ib || echo -n "{}" | pbcopy'
set -g @thumbs-upcase-command 'rifle "{}" || xdg-open "{}" || open "{}"'
# space to trigger by default
set -g @plugin 'fcsonline/tmux-thumbs'

# potentially useful but don't need for current simple usage
# https://github.com/tmux-plugins/tmux-resurrect
# https://github.com/tmux-plugins/tmux-continuum
# https://github.com/tmux-plugins/tmux-logging
# https://github.com/tmux-plugins/tmux-copycat
# https://github.com/tmux-plugins/tmux-fpp

# doesn't allow custom keys doesn't easily allow keybindings for both copying
# and opening
# set -g @plugin 'Morantron/tmux-fingers'
# can't be done with letters: https://github.com/tmux-plugins/tmux-urlview
# tmux-open is even worse and requires actually selecting the item in copy-mode

# auto setup tpm
# https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
# TODO path is hardcoded to ~/.tmux it seems
# if "test ! -d ~/.config/tmux/plugins/tpm" \
#    "run 'git clone https://github.com/tmux-plugins/tpm \
#              ~/.config/tmux/plugins/tpm \
# 		     && ~/.config/tmux/plugins/tpm/bin/install_plugins'"
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm \
             ~/.tmux/plugins/tpm \
		     && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
