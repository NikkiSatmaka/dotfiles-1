#a lot of stuff from here: https://gist.github.com/napcs/1147532; rest from gotbletu's config
# http://zanshin.net/2013/09/05/my-tmux-configuration/
# http://www.unwiredcouch.com/2013/11/15/my-tmux-setup.html
# https://wiki.archlinux.org/index.php/tmux(! clients simultaneously..)
# !http://mutelight.org/practical-tmux
# useful binding info: http://superuser.com/questions/352117/binding-a-tmux-key-to-multiple-commands

# possibly dissolve:
# bind-key S confirm kill-server
# visual-bell ; bell-action ; visual-content
 
#========== General Settings {{{
#------------------------------------------------------
#change prefix key
unbind C-b
# on caps layer.. have not found a better open position at this time
set -g prefix `

# reload .tmux.conf
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# set window and pane index to 1 (0 by default); 0 ftw
set -g base-index 1
set -g pane-base-index 1

# Nested Tmux Session
# send prefix key to tmux session within another tmux session or app
# useful if need grave as symbol too
bind-key a send-prefix

# default shell
set-option -g default-command /bin/zsh
set-option -g default-shell /bin/zsh

# history size; increase scrollback lines
set-option -g history-limit 10000

# clear scrollback buffer; control l just clears screen; can go back in copy mode; do not need prefix key
# demo video: http://www.youtube.com/watch?v=xUB-quCdun0
# http://stackoverflow.com/a/10553992
# hit ctrl+l then ctrl+k
bind-key -n C-k clear-history

# UTF-8
set -g utf8
set-window-option -g utf8 on

#supposedly fixes pausing in vim; lowers delay
set-option -sg escape-time 0

#}}}
#========== Appearance {{{
#-------------------------------------------------
# 256 colour
# set -g default-terminal "screen-256color"
set -g default-terminal "screen-bce"

#========== Pane Colours {{{
# pane divider color; non active panes can change color
#set-option -g pane-border-fg blue
#set-option -g pane-border-bg white

# pane divider color; active pane
# helps when you have more than two panes.
# version 1.8 makes it easy to see 2 panes now
set-option -g pane-active-border-fg blue
#set-option -g pane-active-border-bg yellow
#}}}
#========== Statusbar Customization {{{
#===== General {{{
# tmux powerline: https://github.com/erikw/tmux-powerline
# config files located ~/.tmux-powerlinerc and ~/tmux-powerline/themes/mytheme.sh
# for rainbarf set in .rainbarf.conf for tmux-powerline

# UTF-8 character support in the status bar
set-option -g status-utf8 on

# refresh the status bar faster
set-option -g status-interval 1

# visual notification of activity in other windows (just gives useless messages if on?)
setw -g monitor-activity off
set -g visual-activity off

# Time messages remain in the status bar. Lower this number
# if this is too distracting. (I lowerered from 4k)
set-option -g display-time 1000

#}}}

source ~/tmuxline
#}}}
#}}}
#========== Window / Pane Settings {{{
#------------------------------------------------------
#========== General {{{
# Sync panes - send what you're typing to other panes.
bind-key C-s set-window-option synchronize-panes

# renumber windows sequentially after closing any of them
# https://github.com/thoughtbot/dotfiles/blob/master/tmux.conf
set-option -g renumber-windows on

# renumber windows manually
# https://github.com/jasoncodes/dotfiles/blob/master/config/tmux.conf
bind-key R set renumber-windows on\; new-window\; kill-window\; set renumber-windows off\; display 'Renumbered'

# set auto rename of windows base on command
# set-window-option -g automatic-rename on
# stopped working?
setw -g automatic-rename on
# note: ohmyzsh users comment out DISABLE_AUTO_TITLE=true from zshrc to disable autorename
# http://superuser.com/questions/306028/tmux-and-zsh-custom-prompt-bug-with-window-name

# no confirmation when killing window/pane; by default is set to ask
# http://unix.stackexchange.com/a/30283
#bind-key & kill-window
bind-key x kill-pane
#}}}
#========== Keybindings {{{
# for colemak and other remaps as always
# pretty much just using in program bindings instead of prefix key now

# session# {{{
# $ is rename
# name new session
bind _ command-prompt "new -s %1" 
# kill by name
bind @ command-prompt "kill-session -t %1"
# show sessions and choose to kill at same time
# bind z command-prompt 'ls' \; run 'xdotool key Enter' \; command-prompt 'kill-session -t %1' 
bind z run 'tmux ls' \; command-prompt 'kill-session -t %1' 
# D to choose and enter
# session switching; type in name of session
bind S run 'tmux ls' \; command-prompt "switch -t %1"

# }}}

# link hinting by faking termite keybind
bind f run "xdotool key -window Termite control+shift+x"


#select panes; changed for colemak (n normally moves to next window; i shows info already in status bar)
bind h select-pane -L
bind n select-pane -D
bind e select-pane -U
bind i select-pane -R

# cycle panes (no prefix)
bind-key -n M-h select-pane -t :.-	# previous/counterclockwise
bind-key -n M-i select-pane -t :.+	# next pane/clockwise

# select windows (swapped to ne since switch between windows more often than panes; most common is just prefix #)
bind-key -n M-n select-window -t :-	# previous window
bind-key -n M-e select-window -t :+	# next window
bind-key -r N select-window -t :-
bind-key -r E select-window -t :+

# swapping windows
bind T swap-window -t 0
bind C-e swap-window -t :+
bind C-n swap-window -t :-
bind M-w command-prompt "swap-window -t %1" 

# switch to last window
bind-key -n M-Tab last-window

# resize panes
#bind-key -r < resize-pane -D 5
#bind-key -r > resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r I resize-pane -R 5

# better pane split bindings
bind-key / split-window -h		# vertical split
bind-key - split-window -v		# horizontal split

#Maximize current terminal; bound to }
#bind } run "if [[ $(tmux list-window) =~ tmux-zoom ]]; then tmux last-window; tmux swap-pane -s tmux-zoom.0; tmux kill-window -t tmux-zoom; else tmux new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read'; tmux swap-pane -s tmux-zoom.0; tmux select-window -t tmux-zoom;fi"

#}}}
#========== Copy Mode {{{
# vim keys in copy or choice mode
set-window-option -g mode-keys vi

# benefits of termite scrollback over tmux:
# deals much better with columns (i.e. in weechat) won't go straight up; has a visual block mode more easily accessible 
# url search and hint mode (tmux can do )

# tmux > termite
# easy to rebind keys
# more vim motions and bindings (i.e. f)
# sends to primary clipboard and not configurable?

# colemak

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key Escape copy-mode                        # enter copy mode; default [
bind-key -t vi-copy Escape cancel                # exit copy mode; or hit q
bind-key p paste-buffer                                # paste; default ]
bind-key -t vi-copy v begin-selection                # begin visual mode
bind-key -t vi-copy V select-line                # visual line
# yank; I added copy pipe so I don't have to hit prefix c-c to copy to clipboard..
bind-key -t vi-copy y copy-pipe "xsel -ib"

# https://github.com/bunnyfly/dotfiles/blob/master/tmux.conf
# Colemak Keys
bind-key -t vi-copy n cursor-down
bind-key -t vi-copy e cursor-up
bind-key -t vi-copy i cursor-right
bind-key -t vi-copy k search-again
bind-key -t vi-copy K search-reverse
bind-key -t vi-copy l start-of-line
bind-key -t vi-copy L end-of-line
bind-key -t vi-copy j next-word-end
bind-key -t vi-copy J next-space-end
# bind-key -t vi-copy c-n bottom-line
# bind-key -t vi-copy c-m middle-line
# bind-key -t vi-copy c-e top-line


# run "tmux show-buffer | xsel -i -b"
bind-key -t vi-copy r rectangle-toggle                 # visual block toggle

# read and write and delete paste buffer ( xsel method)
# https://wiki.archlinux.org/index.php/Tmux#ICCCM_Selection_Integration
# ctrl+shift+v
# bind-key < command-prompt -p "send to tmux:" "run-shell 'tmux set-buffer -- \"$(xsel -o -b)\"'"
# bind-key > command-prompt -p "send to xsel:" "run-shell 'tmux show-buffer | xsel -i -b'"
# bind-key + command-prompt "delete-buffer"
# 
##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
# bind C-c run "tmux show-buffer | xsel -i -b"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
# bind C-v run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"

#}}}
#========== Choice Mode{{{
# Colemak (again, all from bunnyfly)
# 
bind-key -t vi-choice n down
bind-key -t vi-choice e up
#bind-key -t vi-choice h tree-collapse
#bind-key -t vi-choice i tree-expand

bind-key -t vi-choice o choose
#}}}
#========== Edit Mode{{{
# Colemak (same)
bind-key -ct vi-edit n history-down
bind-key -ct vi-edit e history-up
bind-key -ct vi-edit s switch-mode
#bind-key -ct vi-edit S switch-mode-begin-line
bind-key -ct vi-edit l start-of-line
bind-key -ct vi-edit L end-of-line
bind-key -ct vi-edit j next-word-end
bind-key -ct vi-edit J next-space-end
#}}}

#}}}
#========== External Scripts {{{
#-------------------------------------------------

# Run command on idle; screensaver
# demo video: http://www.youtube.com/watch?v=s0T82aJn1DQ
#set-option -g lock-after-time 10
#set-option -g lock-command "/usr/bin/cmatrix -C blue"

#========== Link Grabber {{{
# This section is for grabbing links on the current pane/window without the mouse
# and launching it with GUI or CLI browser
#only works if link is one line
#
# not impressed with any.. fastest probably show links urlscan

# urlview;  extract links and launch it
	# demo video: http://www.youtube.com/watch?v=guB4WuVFhtY
	# https://wiki.archlinux.org/index.php/Tmux#Browsing_URL.27s
	# bind-key u capture-pane \; save-buffer /tmp/tmux-buffer \; \
		# new-window -n "urlview" '$SHELL -c "urlview < /tmp/tmux-buffer"'
		# http://does-not-exist.org/mail-archives/mutt-users/msg18479.html
		# to set default browser add to ~/.urlview
		# COMMAND exec >> /tmp/urlview.out 2>&1; set -x; $BROWSER

# urlscan context view and url view; shows context but can't open link with numbers
	# demo video: http://www.youtube.com/watch?v=c-3IdFufY5Q
	# compact view; show links only
	bind-key y capture-pane \; save-buffer /tmp/tmux-buffer \; \
		new-window -n "urlscan" '$SHELL -c "urlscan -c < /tmp/tmux-buffer"'
	# context view; show dialog near links
	bind-key Y capture-pane \; save-buffer /tmp/tmux-buffer \; \
		new-window -n "urlscan" '$SHELL -c "urlscan < /tmp/tmux-buffer"'

# w3m context view
	# demo video: http://www.youtube.com/watch?v=C7YPjbrTeCs
	# http://www.mail-archive.com/mutt-users@mutt.org/msg09657.html

	# bind-key g capture-pane \; save-buffer /tmp/tmux-buffer \; \
		# new-window -n "w3m" '$SHELL -c "w3m < /tmp/tmux-buffer"'
	# hit : to activate links
	# hit Esc then Shift+M to open GUI browser

#}}}
#-------- Zooming {{{
#------------------------------------------------------
# v1.8 comes with zooming already (prefix + z); jut maximizes a panel
# demo video: http://www.youtube.com/watch?v=6HesFWUpU18

#}}}
#========== Mouse (don't really use) {{{
#-------------------------------------------------
# mouse to highlight and copy; to paste use prefix + ]
# http://awhan.wordpress.com/2012/04/18/tmux-copy-paste-with-mouse/
# use shift + mouse to bypass to use system highlighting mode

# http://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/
# Toggle mouse on
bind-key m \
  set-option -g mode-mouse on \;\
  set-option -g mouse-resize-pane on \;\
  set-option -g mouse-select-pane on \;\
  set-option -g mouse-select-window on \;\
  display-message 'Mouse: ON'

# Toggle mouse off
bind-key M \
  set-option -g mode-mouse off \;\
  set-option -g mouse-resize-pane off \;\
  set-option -g mouse-select-pane off \;\
  set-option -g mouse-select-window off \;\
  display-message 'Mouse: OFF'

# mouse wheel scrolling -- whole window not individual panes
#set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

#}}}
#}}}
#========== Predefined Layouts {{{
#-------------------------------------------------

# This is l from gotbletu
# demo video: http://www.youtube.com/watch?v=sxw-n5Du600
# http://amjith.blogspot.com/2011/08/scripting-tmux-layouts.html
# http://unix.stackexchange.com/a/17118
# -v = split horizontal
# -h = split veritical

# Can also do sessions with preloaded windows
# new  -s SessionName -n WindowName Command
# neww -n foo/bar foo
# splitw -v -p 50 -t 0 bar
# selectw -t 1 
# selectp -t 0
# can set a keybinding to source different ones
# initialize sessions
# bind F source-file ~/.tmux/foo
# bind B source-file ~/.tmux/bar

# work
#bind-key M-w new-window -n work -c $HOME \; \
#	split-window -v -p 50 -t 1  \; \
#	split-window -h -p 50 -t 1  \; \
#	split-window -h -p 50 -t 2  \; \
#	select-pane -t 2

# chat
#bind-key M-c new-window -n chat -c $HOME \; \
#	send-keys 'centerim5' 'Enter' \; \
#	split-window -v -p 50 -t 1  \; \
#	send-keys 'weechat-curses' 'Enter' \; \
#	split-window -h -p 50 -t 1  \; \
#	send-keys 'turses' 'Enter' \; \
#	split-window -h -p 50 -t 2  \; \
#	send-keys 'reddit_top -s linux' 'Enter' \; \
#	select-pane -t 2

# torrent
#bind-key M-t new-window -n torrent -c $HOME \; \
#	send-keys 'ranger ~/Videos' 'Enter' \; \
#	split-window -v -p 50 -t 1 \; \
#	send-keys 'clear && figlet Torrent Search' 'Enter' \; \
#	split-window -h -p 50 -t 1 \; \
#	send-keys 'clear && trz' 'Enter' \; \
#	split-window -h -p 50 -t 2 \; \
#	send-keys 'if pidof -x transmission-daemon;then echo on;else transmission-daemon; fi && sleep 3 && transmission-remote-cli' 'Enter' \; \
#	select-pane -t 2

# music
#bind-key M-m new-window -n music -c $HOME \; \
#	send-keys 'cmus' 'Enter' \; \
#	split-window -v -p 50 -t 1 \; \
#	send-keys 'clear && figlet yt-listen shoutcast mp3skull' 'Enter' \; \
#	split-window -h -p 50 -t 1 \; \
#	send-keys 'clear && yt-music' 'Enter' \; \
#	split-window -h -p 50 -t 2 \; \
#	send-keys 'clear && figlet pyRadio NVLC' 'Enter' \; \
#	select-pane -t 2

# stats
#bind-key M-s new-window -n stats -c $HOME \; \
#	send-keys 'htop' 'Enter' \; \
#	split-window -v -p 50 -t 1  \; \
#	send-keys 'clear && figlet Freespace' 'Enter' \; \
#	split-window -h -p 50 -t 1  \; \
#	send-keys 't lsp | less' 'Enter' \; \
#	split-window -h -p 50 -t 2  \; \
#	send-keys 'df' 'Enter' \; \
#	select-pane -t 2

# news
#bind-key M-n new-window -n news -c $HOME \; \
#	send-keys 'newsbeuter' 'Enter' \; \
#	split-window -v -p 50 -t 1  \; \
#	send-keys 'clear && figlet Freespace' 'Enter' \; \
#	split-window -h -p 50 -t 1  \; \
#	send-keys 'hacker_top' 'Enter' \; \
#	split-window -h -p 50 -t 2  \; \
#	send-keys 'reddit_top -s linux' 'Enter' \; \
#	select-pane -t 2

# video
#bind-key M-v new-window -n video -c $HOME \; \
#	send-keys 'ranger ~/Videos' 'Enter' \; \
#	split-window -v -p 50 -t 1  \; \
#	send-keys 'clear && figlet youtube-viewer' 'Enter' \; \
#	split-window -h -p 50 -t 1  \; \
#	send-keys 'clear && figlet rtmpdump' 'Enter' \; \
#	split-window -h -p 50 -t 2  \; \
#	send-keys 'clear && figlet Freespace' 'Enter' \; \
#	select-pane -t 2

#}}}
#========== Testing Area {{{
#-------------------------------------------------
# dont use C-[ because it will double bind with Escape key; ^[ = escape

# pipe pane to log file; works but all these ugls escs
# https://gist.github.com/napcs/1147532
bind-key P pipe-pane -o "cat >>~/Desktop/#W-tmux.log" \; display-message "Toggled logging to ~/Dekstop/#W-tmux.log"

# select panes (no prefix)
# need to try: http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# C-l by deafult clears terminal screen
#bind-key -n C-k select-pane -U
#bind-key -n C-j select-pane -D
#
# https://gist.github.com/snuggs/800936
#bind-key -n C-h select-pane -L
#bind-key -n C-l select-pane -R
# bind o select-layout "active-only"
# bind M-- select-layout "even-vertical"
# bind M-| select-layout "even-horizontal"
# bind M-r rotate-window

# read and write and delete paste buffer
# https://github.com/whiteinge/dotfiles/blob/master/.tmux.conf
#bind-key < command-prompt -p "send to tmux:" \
#	"run-shell 'xclip -o -selection clipboard | tmux load-buffer -'"
	# this one freezes tmux ( needs fixing)
#bind-key > command-prompt -p "send to xclip:" \
#	"run-shell 'tmux save-buffer - | xclip -i -selection clipboard'"
#bind-key + command-prompt "delete-buffer -b %1"

# read and write to paste buffer
# http://unix.stackexchange.com/a/36896
# bind-key < run-shell 'xclip -o -selection clipboard | tmux load-buffer -' \; display-message "send to tmux"
# bind-key > run-shell 'tmux save-buffer - | xclip -i -selection clipboard' \; display-message "send to xclip"

#}}}
