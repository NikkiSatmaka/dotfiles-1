# TODO:
# - use graphicsmagick?
# - get rid of o shell mapping? (back to default sort)

# Notes:
# default config: /usr/share/doc/ranger/config/rc.conf
# macros:
# %f highlighted; %d current dir; %t all tagged in current;
# %s selected in current; %c full paths of all copied/cut

# to have commands work on selected files or current file can do:
# shell <some command> %s || <same command> %f
# simpler than creating a ranger command; command must fail if no args

# uses for setlocal?

# Settings {{{
set column_ratios 1,3,5
set dirname_in_tabs true
# no clickable padding when no preview
set padding_right false
# abbreviate $HOME with ~ in the titlebar?
set tilde_in_titlebar true
# off so doesn't permanently change title
set update_tmux_title false

# show git info
set vcs_aware true
set vcs_backend_git enabled

# show hidden files by default (when starting)
set show_hidden true
# add fasl files
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp|fasl)$|^lost\+found$|^__(py)?cache__$

# works with xterm, urxvt, termite (now requires patch), gnome-terminal,
# and other vte terminals with and without tmux
set preview_images true

# open all images in folder with image viewer when none selected
# opens in ranger order but doesn't work if thousands of images in folder
set open_all_images true

# increase history kept
set max_history_size 30
set max_console_history_size 100

# smart case find (f)
alias find scout -aets

# }}}

# Mappings {{{
# WM Experimentation {{{
# change comment char to #
# straight from .vimrc; change nnoremap <silent> to "map"
# change ":silent !" to "shell -s "
# remove <cr>.*$
# Tmux Experimentation {{{
# "r" is Redraw {{{
# window switching {{{
map ra shell -s wm_action inpt ra
map rr shell -s wm_action inpt rr
map rs shell -s wm_action inpt rs
map rt shell -s wm_action inpt rt
map rd shell -s wm_action inpt rd
map rh shell -s wm_action inpt rh
map rn shell -s wm_action inpt rn
map re shell -s wm_action inpt re
map ri shell -s wm_action inpt ri
map ro shell -s wm_action inpt ro
# }}}
# resize panes {{{
map rmh shell -s wm_action inpt rmh
map rmn shell -s wm_action inpt rmn
map rme shell -s wm_action inpt rme
map rmi shell -s wm_action inpt rmi
# }}}
# circulate
# previous
map r, shell -s wm_action inpt r,
# next
map r. shell -s wm_action inpt r.

# new window
map rc shell -s wm_action inpt rc
# kill pane
map rx shell -s wm_action inpt rx
# last window
map rl shell -s wm_action inpt rl
# split windows
map r/ shell -s wm_action inpt r/
map r- shell -s wm_action inpt r-

# break pane
map r! shell -s wm_action inpt rbang

# take from old s<keys> bindings {{{
# last pane
map ru shell -s wm_action inpt ru
# zoomed pane toggle
map rk shell -s wm_action inpt rk
# fullscreen
map rf shell -s wm_action inpt rf
# sticky
map ry shell -s wm_action inpt ry
# main-vertical layout
map rv shell -s wm_action inpt rv

# }}}
# }}}
# }}}
# }}}

# Shell Commands: {{{
unmap dD
# to trash with trash-cli instead of delete
map di shell trash-put %s || trash-put %f
# default ud is a duplicate of uy
map ud shell trash-restore

# see ~/bin/bgset; wrapper for setroot
map cb shell bgset -z %d/%f
# change wallpaper and store
map cw shell bgset --store -z %f

# image magick
# change rotation; image rotate with imagemagick
map cr shell mogrify -rotate 90 %f
# flop (mirror image) to new name
map cm shell convert -flop %f flopped_%f

# make a 100x100 thumbnail (ranger_functions)
map cs shell make_thumbnail %f

# upscale (ranger_functions)
map cu shell upscale %f
map cU shell upscale %f 10

# convert file to txt
map ct shell unoconv -f txt %f
# convert file to pdf
map cp shell unoconv -f pdf %f

# replace cw mapping
map cc console rename

# https://bbs.archlinux.org/viewtopic.php?pid=1458918#p1458918
# send selected or current file as an attachment with mutt
# map ta shell mutt -a %s || mutt -a %f

# import music in current directory with beets
map bi shell beet import .

# upload to imgur; using function (t for title, c for caption)
map ui console -p13 shell imp -t -c %%f
# anon upload
map uI shell imp -a %f

# extract archive
map ux shell atool -x %s || atool -x %f
# extract and delete selected or highlighted archive
map tx shell exd %s || exd %f

# open highlighted file in existing vim session
map tv shell gvim --remote %f
# map tV shell vim --servername termgeneral --remote-tab-silent %f

# umount all
map uN shell devmon --unmount-all --no-gui
# umount most recently mounted
map un shell devmon --unmount-recent --no-gui
# eject tray
map ue shell sudo eject /dev/sr0

# see https://github.com/noctuid/tdrop
map th shell tdrop toggle_auto_hide

# recently used folders
map gr shell ~/bin/ranger/recent_folders.sh database &
map gR shell ~/bin/ranger/recent_folders.sh ag-sys &
# map td shell ~/bin/ranger/recent_folders.sh fzf-cd &

# }}}

# General {{{
# reload ranger mappings
map t. source ~/.config/ranger/rc.conf
map tr reload_cwd

map , mark_files toggle=True
map tm tag_toggle
map x mark_files toggle=True

map o console shell%space
map O  console -p6 shell  %f

map tw chain draw_possible_programs; console open_with%space

# renaming
map a eval fm.open_console('rename ' + fm.thisfile.basename)
# like vidir, wdired, tfman
map tb bulkrename

# copying path/dir/filename to clipboard
map yp shell -d echo -n %d/%f | xsel -ib
map yd shell -d echo -n %d    | xsel -ib
map yn shell -d echo -n %f    | xsel -ib

# }}}

# Colemak Movement {{{
map h move left=1
map n move down=1
map e move up=1
map i move right=1
tmap n taskview_move down=1
tmap e taskview_move up=1
map to move up=1 pages=True
map tk move down=1 pages=True
pmap to pager_move down=0.5 pages=True
pmap tk pager_move up=0.5 pages=True
map k search_next
map K search_next forward=False

# }}}

# Navigation {{{
map f console find%space
# see commands.py
map F console fasd%space
map tp fzf_select

map l history_go -1
map L history_go 1

# Tab Movement {{{
map tt tab_new ~
map gt tab_move 1
map gT tab_move -1
copymap gt E
copymap gT N
map <space>a tab_move 0 1
map <space>r tab_move 0 2
map <space>s tab_move 0 3
map <space>t tab_move 0 4
map <space>d tab_move 0 5
map <space>h tab_move 0 6
map <space>n tab_move 0 7
map <space>e tab_move 0 8 
map <space>i tab_move 0 9
map <space>o tab_move 0 10

# added/modified gotos (g for stuff not in /home)
map gb cd /bin

# }}}
# }}}

# Sorting {{{
# (default o* mappings; changed to co*); change Order
map cor toggle_option sort_reverse
map coz set sort=random
map cos chain set sort=size;      set sort_reverse=False
map cob chain set sort=basename;  set sort_reverse=False
map con chain set sort=natural;   set sort_reverse=False
map com chain set sort=mtime;     set sort_reverse=False
map coc chain set sort=ctime;     set sort_reverse=False
map coa chain set sort=atime;     set sort_reverse=False
map cot chain set sort=type;      set sort_reverse=False
map coe chain set sort=extension; set sort_reverse=False

map coS chain set sort=size;      set sort_reverse=True
map coB chain set sort=basename;  set sort_reverse=True
map coN chain set sort=natural;   set sort_reverse=True
map coM chain set sort=mtime;     set sort_reverse=True
map coC chain set sort=ctime;     set sort_reverse=True
map coA chain set sort=atime;     set sort_reverse=True
map coT chain set sort=type;      set sort_reverse=True
map coE chain set sort=extension; set sort_reverse=True

# }}}

# Git {{{
# add selection or highlighted files to git index (git add)
map tga stage
# remove from git index (git reset)
map tgu unstage
# show git log for selected or highlighted files
map tgl log
# can also show diff between selected files

# }}}

# Command Mode Maps {{{
# backspace a word
cmap Â¸ eval fm.ui.console.delete_word()

# }}}
# }}}
